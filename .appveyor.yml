# Specify version format
version: "1.0.0.{build}"

# Branches to build
branches:
  only: 
    - master

# Clone depth
clone_depth: 5

# Clone repository as zip archive
shallow_clone: true

# Including commits with 'build' comment
only_commits:
  message: build

# Build matrix
environment:
  matrix:
    - build: VisualStudio (x32)
      command: cmd
      generate: VisualStudio-x32
      name: VisualStudio
      ext: bat
    - build: VisualStudio (x64)
      command: cmd
      generate: VisualStudio-x64
      name: VisualStudio
      ext: bat
    - build: Cygwin (x32)
      command: C:\cygwin\bin\bash
      generate: Cygwin
      name: Cygwin
      ext: sh
      cyg_root: C:\cygwin
      cyg_setup: setup-x86.exe
      cyg_mirror: http://mirrors.kernel.org
      cyg_cache: C:\cygwin\var\cache\setup
    - build: Cygwin (x64)
      command: C:\cygwin64\bin\bash
      generate: Cygwin
      name: Cygwin
      ext: sh
      cyg_root: C:\cygwin64
      cyg_setup: setup-x86_64.exe
      cyg_mirror: http://mirrors.kernel.org
      cyg_cache: C:\cygwin64\var\cache\setup

# Allow to fail on first error in matrix
matrix:
  fast_finish: true

# Cache files to speed up build
cache:
  - 'C:\cygwin\var\cache\setup'
  - 'C:\cygwin64\var\cache\setup'

# Scripts that are called at very beginning, before repo cloning
init:
  - cmake --version
  - msbuild /version

# Scripts that run after cloning repository
install:
  - if "%build%"=="VisualStudio (x32)" choco install doxygen.portable
  - if "%build%"=="VisualStudio (x32)" choco install graphviz.portable
  - if "%build%"=="VisualStudio (x64)" choco install doxygen.portable
  - if "%build%"=="VisualStudio (x64)" choco install graphviz.portable
  - if "%build%"=="Cygwin (x32)" ps: 'Start-FileDownload "http://cygwin.com/%cyg_setup%" -FileName "%cyg_setup%"'
  - if "%build%"=="Cygwin (x64)" ps: 'Start-FileDownload "http://cygwin.com/%cyg_setup%" -FileName "%cyg_setup%"'
  - if "%build%"=="Cygwin (x32)" '%cyg_setup% --quiet-mode --no-shortcuts --only-site --root "%cyg_root%" --site "%cyg_mirror%" --local-package-dir "%cyg_cache%" --packages autoconf,automake,bison,cmake,gcc-core,gcc-g++,mingw-runtime,mingw-binutils,mingw-gcc-core,mingw-gcc-g++,mingw-pthreads,mingw-w32api,libtool,make,python,gettext-devel,gettext,intltool,libiconv,pkg-config,git,curl,libxslt > NUL 2>&1'
  - if "%build%"=="Cygwin (x64)" '%cyg_setup% --quiet-mode --no-shortcuts --only-site --root "%cyg_root%" --site "%cyg_mirror%" --local-package-dir "%cyg_cache%" --packages autoconf,automake,bison,cmake,gcc-core,gcc-g++,mingw-runtime,mingw-binutils,mingw-gcc-core,mingw-gcc-g++,mingw-pthreads,mingw-w32api,libtool,make,python,gettext-devel,gettext,intltool,libiconv,pkg-config,git,curl,libxslt > NUL 2>&1'
  - if "%build%"=="Cygwin (x32)" '%command% -lc "cygcheck -dc cygwin"'
  - if "%build%"=="Cygwin (x64)" '%command% -lc "cygcheck -dc cygwin"'
  - cmd git config --global user.name "AppVeyor"
  - cmd git config --global user.email "team@appveyor.com"
  - cmd git config --global push.default simple
  - cmd git submodule update --init --recursive --remote

# Build scripts
build_script:
  - cd scripts
  - 01-generate-%generate%.%ext%
  - 01-generate-%name%.%ext%
  - 02-build-%name%.%ext%
  - 03-tests.%ext%
  - 04-install-%name%.%ext%
  - 05-doxygen-%name%.%ext%
  - 06-clean.%ext%

# Test scripts
test: off
